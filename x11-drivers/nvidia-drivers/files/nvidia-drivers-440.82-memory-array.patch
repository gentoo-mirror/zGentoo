--- a/conftest.sh
+++ b/conftest.sh
@@ -406,6 +406,8 @@ compile_test() {
             # Determine if the set_memory_uc() function is present.
             #
             CODE="
+            #include <asm/page.h>
+            #include <asm/pgtable.h>
             #if defined(NV_ASM_SET_MEMORY_H_PRESENT)
             #include <asm/set_memory.h>
             #else
@@ -423,6 +425,8 @@ compile_test() {
             # Determine if the set_memory_array_uc() function is present.
             #
             CODE="
+            #include <asm/page.h>
+            #include <asm/pgtable.h>
             #if defined(NV_ASM_SET_MEMORY_H_PRESENT)
             #include <asm/set_memory.h>
             #else
@@ -475,6 +479,8 @@ compile_test() {
             # Determine if the set_pages_uc() function is present.
             #
             CODE="
+            #include <asm/page.h>
+            #include <asm/pgtable.h>
             #if defined(NV_ASM_SET_MEMORY_H_PRESENT)
             #include <asm/set_memory.h>
             #else
@@ -1837,7 +1843,7 @@ compile_test() {
             # Determine if atomic_long_t and associated functions are defined
             # Added in 2.6.16 2006-01-06 d3cb487149bd706aa6aeb02042332a450978dc1c
             CODE="
-            #include <asm/atomic.h>
+            #include <linux/atomic.h>
             void conftest_atomic_long(void) {
                 atomic_long_t data;
                 atomic_long_read(&data);
@@ -1851,7 +1857,7 @@ compile_test() {
         atomic64_type)
             # Determine if atomic64_t and associated functions are defined
             CODE="
-            #include <asm/atomic.h>
+            #include <linux/atomic.h>
             void conftest_atomic64(void) {
                 atomic64_t data;
                 atomic64_read(&data);
@@ -3485,7 +3491,7 @@ compile_test() {
             #     2008-01-25  9ee85241fdaab358dff1d8647f20a478cfa512a1
             #
             CODE="
-            #include <acpi/acpi_bus.h>
+            #include <linux/acpi.h>
             int conftest_register_acpi_notifier(void) {
                 return register_acpi_notifier();
             }"